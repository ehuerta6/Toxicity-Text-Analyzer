{
  "name": "toxiguard",
  "version": "2.1.0",
  "description": "Advanced Toxicity Detection System with ML-powered text analysis",
  "private": true,
  "scripts": {
    "setup": "npm run setup:frontend && npm run setup:backend",
    "setup:frontend": "cd frontend && npm install",
    "setup:backend": "cd backend && pip install -r requirements.txt",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000",
    "build": "npm run build:frontend",
    "build:frontend": "cd frontend && npm run build",
    "preview": "cd frontend && npm run preview",
    "clean": "npm run clean:frontend && npm run clean:backend && npm run clean:root",
    "clean:frontend": "cd frontend && rm -rf node_modules dist .vite",
    "clean:backend": "cd backend && find . -type d -name __pycache__ -exec rm -rf {} + && find . -type f -name '*.pyc' -delete",
    "clean:root": "rm -rf node_modules",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm run test",
    "test:backend": "cd backend && python -m pytest",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && python -m flake8 .",
    "format": "npm run format:frontend && npm run format:backend",
    "format:frontend": "cd frontend && npm run format",
    "format:backend": "cd backend && python -m black .",
    "type-check": "cd frontend && npm run type-check",
    "start": "npm run dev",
    "install:all": "npm install && npm run setup",
    "reset": "npm run clean && npm run install:all",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "toxicity-detection",
    "machine-learning",
    "content-moderation",
    "nlp",
    "react",
    "fastapi",
    "python",
    "typescript"
  ],
  "author": "Emi",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/emi/toxiguard.git"
  },
  "bugs": {
    "url": "https://github.com/emi/toxiguard/issues"
  },
  "homepage": "https://github.com/emi/toxiguard#readme"
}
